// commands/bellek.js
const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const os = require('os'); // Sistem RAM kullanƒ±mƒ± i√ßin

module.exports = {
    // Slash Komutu Tanƒ±mlamasƒ±
    data: new SlashCommandBuilder()
        .setName('bellek')
        .setDescription('Botun veya sistemin anlƒ±k bellek kullanƒ±mƒ±nƒ± g√∂sterir.')
        .addStringOption(option =>
            option.setName('tip')
                .setDescription('Hangi bellek bilgisini g√∂rmek istersin?')
                .setRequired(false) // Se√ßenek zorunlu deƒüil
                .addChoices(
                    { name: 'Bot Belleƒüi', value: 'bot' },
                    { name: 'Sistem Belleƒüi', value: 'system' },
                    { name: 'Hepsi', value: 'all' } // Varsayƒ±lan olarak hepsi
                )),
    
    async execute(interaction, client) {
        // Geli≈ütirici kontrol√º (Sadece bot sahibi kullanabilir)
        const { OWNER_ID } = require('../utils/config'); // utils/config.js dosyanƒ±zda OWNER_ID tanƒ±mlƒ± olmalƒ±
        if (interaction.user.id !== OWNER_ID) {
            return interaction.reply({ content: 'Bu komutu sadece geli≈ütirici kullanabilir.', ephemeral: true });
        }

        const requestedType = interaction.options.getString('tip') || 'all'; // Varsayƒ±lan 'all'

        const embed = new EmbedBuilder()
            .setColor('#20B2AA')
            .setTitle('Bellek Kullanƒ±m Bilgileri')
            .setTimestamp()
            .setFooter({ text: 'Somesub Bot | Bellek Kontrol', iconURL: client.user.displayAvatarURL() });

        const fields = [];

        // --- Bot S√ºre√ß Bellek Kullanƒ±mƒ± (process.memoryUsage() ile) ---
        const processMemory = process.memoryUsage();
        const rss = (processMemory.rss / 1024 / 1024).toFixed(2); // Resident Set Size - ƒ∞≈ületim sistemi tarafƒ±ndan ayrƒ±lan toplam bellek
        const heapTotal = (processMemory.heapTotal / 1024 / 1024).toFixed(2); // V8 motorunun tahsis ettiƒüi toplam heap boyutu
        const heapUsed = (processMemory.heapUsed / 1024 / 1024).toFixed(2); // V8 motoru tarafƒ±ndan kullanƒ±lan heap boyutu

        const botMemoryUsage = `RSS: \`${rss}MB\`\nHeap Used: \`${heapUsed}MB / ${heapTotal}MB\``;

        // --- Sistem RAM Kullanƒ±mƒ± (os mod√ºl√º ile) ---
        const totalSystemMemoryBytes = os.totalmem(); // Toplam sistem belleƒüi (byte)
        const freeSystemMemoryBytes = os.freemem(); // Bo≈ü sistem belleƒüi (byte)
        const usedSystemMemoryBytes = totalSystemMemoryBytes - freeSystemMemoryBytes; // Kullanƒ±lan sistem belleƒüi (byte)
        
        // Deƒüerleri her zaman GB olarak g√∂sterelim, daha okunur olacaktƒ±r.
        const totalSystemMemoryGB_formatted = (totalSystemMemoryBytes / (1024 * 1024 * 1024)).toFixed(2); 
        const usedSystemMemoryGB_formatted = (usedSystemMemoryBytes / (1024 * 1024 * 1024)).toFixed(2);
        
        // Burayƒ±, 512MB'lƒ±k beklentinle √ßeli≈üen b√ºy√ºk deƒüeri a√ßƒ±klayacak ≈üekilde d√ºzenledim.
        const systemRamUsage = `Kullanƒ±lan: \`${usedSystemMemoryGB_formatted}GB\`\nToplam: \`${totalSystemMemoryGB_formatted}GB\``;

        if (requestedType === 'bot' || requestedType === 'all') {
            fields.push({ name: 'ü§ñ Bot S√ºre√ß Belleƒüi', value: botMemoryUsage, inline: false });
        }
        if (requestedType === 'system' || requestedType === 'all') {
            // Alan adƒ±nƒ± daha a√ßƒ±klayƒ±cƒ± hale getirdim
            fields.push({ name: 'üíª Ortam Belleƒüi (Sunucu/Konteyner)', value: systemRamUsage, inline: false });
        }
        
        if (fields.length === 0) {
            embed.setDescription("Hangi bellek bilgisini g√∂rmek istediƒüini belirtmedin veya ge√ßersiz bir se√ßenek kullandƒ±n. L√ºtfen 'Bot Belleƒüi', 'Sistem Belleƒüi' veya 'Hepsi' se√ßeneklerinden birini kullan.");
        } else {
            embed.setDescription('Botun ve √ßalƒ±≈ütƒ±ƒüƒ± sanal/konteyner ortamƒ±nƒ±n anlƒ±k bellek kullanƒ±m detaylarƒ±:\n\n' +
                                 `*Not: "Ortam Belleƒüi", botun eri≈üebildiƒüi sanal RAM miktarƒ±nƒ± g√∂sterir. Bu deƒüer, hosting saƒülayƒ±cƒ±nƒ±zƒ±n size tahsis ettiƒüi ${totalSystemMemoryGB_formatted}GB\'lƒ±k bir kapasiteyi yansƒ±tabilir, fiziksel sunucunun tamamƒ±nƒ± deƒüil. Hostinginiz tarafƒ±ndan uygulanan 512MB gibi bir limit olsa bile, botun √ßalƒ±≈ütƒ±ƒüƒ± sanal katman daha b√ºy√ºk bir toplam g√∂sterebilir.*`);
            embed.addFields(fields);
        }

        await interaction.reply({ embeds: [embed], ephemeral: true }).catch(err => console.error("Bellek embed'i g√∂nderilemedi:", err));
    },
};